(define (atom? x)
	(or (number? x)
	(string? x)
	(symbol? x)
	(null? x)
	(eq? x #t)))
	
(define (mean list)
	(if (null? x) 
	'()
	(rec list 0 0)))

(define (rec list sum n)
	(if (null? list)
	(/ sum n)
	(if (number? (car list))
		(rec (cdr list) (+ sum (car list)) (+ n 1))
		(rec (cdr list) sum n))
))
